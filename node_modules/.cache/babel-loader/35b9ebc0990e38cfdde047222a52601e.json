{"ast":null,"code":"var _jsxFileName = \"/home/hexen/Work/currency/src/containers/Compare/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport { makeSelectCurrency, makeSelectEndDate, makeSelectStartDate, makeSelectCompareResults } from './selectors';\nimport { compareGetCompare } from './actions';\nimport CompareControls from '../../components/CompareControls';\nimport EmptyContent from '../../components/EmptyContent';\nimport Chart from '../../components/Chart';\n\nclass Compare extends Component {\n  componentDidUpdate({\n    startDate: prevStartDate,\n    endDate: prevEndDate,\n    currency: prevCurrency\n  }, prevState, snapshot) {\n    const _this$props = this.props,\n          onSubmit = _this$props.onSubmit,\n          startDate = _this$props.startDate,\n          endDate = _this$props.endDate,\n          currency = _this$props.currency;\n    if (startDate && endDate && currency) if (startDate !== prevStartDate || endDate !== prevEndDate || currency !== prevCurrency) {\n      onSubmit();\n    }\n  }\n\n  render() {\n    const results = this.props.results;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CompareControls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), results ? React.createElement(Chart, {\n      data: results.rates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : React.createElement(EmptyContent, {\n      title: \"No results found\",\n      subtitle: \"Try to change currency or date range\",\n      icon: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currency: makeSelectCurrency(),\n  startDate: makeSelectStartDate(),\n  endDate: makeSelectEndDate(),\n  results: makeSelectCompareResults()\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: () => dispatch(compareGetCompare())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(Compare);","map":{"version":3,"sources":["/home/hexen/Work/currency/src/containers/Compare/index.js"],"names":["React","Component","connect","createStructuredSelector","compose","makeSelectCurrency","makeSelectEndDate","makeSelectStartDate","makeSelectCompareResults","compareGetCompare","CompareControls","EmptyContent","Chart","Compare","componentDidUpdate","startDate","prevStartDate","endDate","prevEndDate","currency","prevCurrency","prevState","snapshot","props","onSubmit","render","results","rates","mapStateToProps","mapDispatchToProps","dispatch","withConnect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,wBAJF,QAKO,aALP;AAMA,SACEC,iBADF,QAEO,WAFP;AAGA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAC9Ba,EAAAA,kBAAkB,CAChB;AAAEC,IAAAA,SAAS,EAAEC,aAAb;AAA4BC,IAAAA,OAAO,EAAEC,WAArC;AAAkDC,IAAAA,QAAQ,EAAEC;AAA5D,GADgB,EAEhBC,SAFgB,EAGhBC,QAHgB,EAIhB;AAAA,wBACmD,KAAKC,KADxD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBT,SADlB,eACkBA,SADlB;AAAA,UAC6BE,OAD7B,eAC6BA,OAD7B;AAAA,UACsCE,QADtC,eACsCA,QADtC;AAEA,QAAIJ,SAAS,IAAIE,OAAb,IAAwBE,QAA5B,EACE,IACEJ,SAAS,KAAKC,aAAd,IACAC,OAAO,KAAKC,WADZ,IAEAC,QAAQ,KAAKC,YAHf,EAIE;AACAI,MAAAA,QAAQ;AACT;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UAELC,OAFK,GAGH,KAAKH,KAHF,CAELG,OAFK;AAIP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGA,OAAO,GACN,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,OAAO,CAACC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,GAGN,oBAAC,YAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,QAAQ,EAAC,sCAFX;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADF;AAcD;;AAnC6B;;AAsChC,MAAMC,eAAe,GAAGzB,wBAAwB,CAAC;AAC/CgB,EAAAA,QAAQ,EAAEd,kBAAkB,EADmB;AAE/CU,EAAAA,SAAS,EAAER,mBAAmB,EAFiB;AAG/CU,EAAAA,OAAO,EAAEX,iBAAiB,EAHqB;AAI/CoB,EAAAA,OAAO,EAAElB,wBAAwB;AAJc,CAAD,CAAhD;;AAOA,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCN,EAAAA,QAAQ,EAAE,MAAMM,QAAQ,CAACrB,iBAAiB,EAAlB;AADc,CAAL,CAAnC;;AAIA,MAAMsB,WAAW,GAAG7B,OAAO,CACzB0B,eADyB,EAEzBC,kBAFyB,CAA3B;AAKA,eAAezB,OAAO,CAAC2B,WAAD,CAAP,CAAqBlB,OAArB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { compose } from 'redux'\nimport {\n  makeSelectCurrency,\n  makeSelectEndDate,\n  makeSelectStartDate,\n  makeSelectCompareResults\n} from './selectors'\nimport {\n  compareGetCompare,\n} from './actions'\nimport CompareControls from '../../components/CompareControls'\nimport EmptyContent from '../../components/EmptyContent'\nimport Chart from '../../components/Chart'\n\nclass Compare extends Component {\n  componentDidUpdate(\n    { startDate: prevStartDate, endDate: prevEndDate, currency: prevCurrency },\n    prevState,\n    snapshot\n  ) {\n    const { onSubmit, startDate, endDate, currency } = this.props\n    if (startDate && endDate && currency)\n      if (\n        startDate !== prevStartDate ||\n        endDate !== prevEndDate ||\n        currency !== prevCurrency\n      ) {\n        onSubmit()\n      }\n  }\n\n  render() {\n    const {\n      results\n    } = this.props\n    return (\n      <div>\n        <CompareControls />\n        {results ? (\n          <Chart data={results.rates} />\n        ) : (\n          <EmptyContent\n            title=\"No results found\"\n            subtitle=\"Try to change currency or date range\"\n            icon=\"search\"\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currency: makeSelectCurrency(),\n  startDate: makeSelectStartDate(),\n  endDate: makeSelectEndDate(),\n  results: makeSelectCompareResults()\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: () => dispatch(compareGetCompare())\n})\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default compose(withConnect)(Compare)\n"]},"metadata":{},"sourceType":"module"}