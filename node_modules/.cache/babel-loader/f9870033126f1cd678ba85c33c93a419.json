{"ast":null,"code":"import { fromJS } from 'immutable';\nimport { createReducer } from 'redux-act';\nimport { converterSetConvertResult, converterSetFromCurrency, converterSetToCurrency, converterSetAmount } from './actions';\nconst initialState = fromJS({\n  amount: '',\n  from: null,\n  to: [],\n  convertResult: []\n});\nconst methods = {\n  [converterSetAmount]: (state, payload) => state.set('amount', payload),\n  [converterSetFromCurrency]: (state, payload) => state.set('from', payload),\n  [converterSetToCurrency]: (state, payload) => state.set('to', fromJS(payload)),\n  [converterSetConvertResult]: (state, payload) => state.set('convertResult', fromJS(payload))\n};\nexport default createReducer(methods, initialState);","map":{"version":3,"sources":["/home/hexen/Work/currency/src/containers/Converter/reducers.js"],"names":["fromJS","createReducer","converterSetConvertResult","converterSetFromCurrency","converterSetToCurrency","converterSetAmount","initialState","amount","from","to","convertResult","methods","state","payload","set"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SACEC,yBADF,EAEEC,wBAFF,EAGEC,sBAHF,EAIEC,kBAJF,QAKO,WALP;AAOA,MAAMC,YAAY,GAAGN,MAAM,CAAC;AAC1BO,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BC,EAAAA,EAAE,EAAE,EAHsB;AAI1BC,EAAAA,aAAa,EAAE;AAJW,CAAD,CAA3B;AAOA,MAAMC,OAAO,GAAG;AACd,GAACN,kBAAD,GAAsB,CAACO,KAAD,EAAQC,OAAR,KAAoBD,KAAK,CAACE,GAAN,CAAU,QAAV,EAAoBD,OAApB,CAD5B;AAEd,GAACV,wBAAD,GAA4B,CAACS,KAAD,EAAQC,OAAR,KAAoBD,KAAK,CAACE,GAAN,CAAU,MAAV,EAAkBD,OAAlB,CAFlC;AAGd,GAACT,sBAAD,GAA0B,CAACQ,KAAD,EAAQC,OAAR,KACxBD,KAAK,CAACE,GAAN,CAAU,IAAV,EAAgBd,MAAM,CAACa,OAAD,CAAtB,CAJY;AAKd,GAACX,yBAAD,GAA6B,CAACU,KAAD,EAAQC,OAAR,KAC3BD,KAAK,CAACE,GAAN,CAAU,eAAV,EAA2Bd,MAAM,CAACa,OAAD,CAAjC;AANY,CAAhB;AASA,eAAeZ,aAAa,CAACU,OAAD,EAAUL,YAAV,CAA5B","sourcesContent":["import { fromJS } from 'immutable'\nimport { createReducer } from 'redux-act'\nimport {\n  converterSetConvertResult,\n  converterSetFromCurrency,\n  converterSetToCurrency,\n  converterSetAmount\n} from './actions'\n\nconst initialState = fromJS({\n  amount: '',\n  from: null,\n  to: [],\n  convertResult: []\n})\n\nconst methods = {\n  [converterSetAmount]: (state, payload) => state.set('amount', payload),\n  [converterSetFromCurrency]: (state, payload) => state.set('from', payload),\n  [converterSetToCurrency]: (state, payload) =>\n    state.set('to', fromJS(payload)),\n  [converterSetConvertResult]: (state, payload) =>\n    state.set('convertResult', fromJS(payload))\n}\n\nexport default createReducer(methods, initialState)\n"]},"metadata":{},"sourceType":"module"}