{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { all } from 'redux-saga/effects'; // Reducers\n\nimport converterReducers from '../containers/Converter/reducers';\nimport compareReducers from '../containers/Compare/reducers'; // Sagas\n\nimport converterSagas from '../containers/Converter/saga';\nimport compareSagas from '../containers/Compare/saga';\nconst combinedReducers = combineReducers({\n  converter: converterReducers,\n  compare: compareReducers\n});\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(combinedReducers, compose(applyMiddleware(sagaMiddleware), // If you are using the devToolsExtension, you can add it here also\ntypeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f));\n\nfunction* rootSaga() {\n  yield all([converterSagas(), compareSagas()]);\n}\n\nsagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["/home/hexen/Work/currency/src/lib/configureStore.js"],"names":["combineReducers","applyMiddleware","createStore","compose","createSagaMiddleware","all","converterReducers","compareReducers","converterSagas","compareSagas","combinedReducers","converter","compare","sagaMiddleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","f","rootSaga","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,GAAT,QAAoB,oBAApB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,gBAAgB,GAAGV,eAAe,CAAC;AACvCW,EAAAA,SAAS,EAAEL,iBAD4B;AAEvCM,EAAAA,OAAO,EAAEL;AAF8B,CAAD,CAAxC;AAKA,MAAMM,cAAc,GAAGT,oBAAoB,EAA3C;AAEA,OAAO,MAAMU,KAAK,GAAGZ,WAAW,CAC9BQ,gBAD8B,EAE9BP,OAAO,CACLF,eAAe,CAACY,cAAD,CADV,EAEL;AACA,OAAOE,MAAM,CAACC,4BAAd,KAA+C,WAA/C,GACID,MAAM,CAACC,4BAAP,EADJ,GAEIC,CAAC,IAAIA,CALJ,CAFuB,CAAzB;;AAWP,UAAUC,QAAV,GAAsB;AACpB,QAAMb,GAAG,CAAC,CACRG,cAAc,EADN,EAERC,YAAY,EAFJ,CAAD,CAAT;AAID;;AAEDI,cAAc,CAACM,GAAf,CAAmBD,QAAnB","sourcesContent":["import { combineReducers, applyMiddleware, createStore, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { all } from 'redux-saga/effects'\n\n// Reducers\nimport converterReducers from '../containers/Converter/reducers'\nimport compareReducers from '../containers/Compare/reducers'\n\n// Sagas\nimport converterSagas from '../containers/Converter/saga'\nimport compareSagas from '../containers/Compare/saga'\n\nconst combinedReducers = combineReducers({\n  converter: converterReducers,\n  compare: compareReducers\n})\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = createStore(\n  combinedReducers,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    // If you are using the devToolsExtension, you can add it here also\n    typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined'\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f\n  )\n)\n\nfunction* rootSaga () {\n  yield all([\n    converterSagas(),\n    compareSagas()\n  ])\n}\n\nsagaMiddleware.run(rootSaga)\n"]},"metadata":{},"sourceType":"module"}