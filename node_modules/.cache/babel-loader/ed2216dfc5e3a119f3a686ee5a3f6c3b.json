{"ast":null,"code":"var _jsxFileName = \"/home/hexen/Work/currency/src/components/ConverterResults/index.js\";\nimport React from 'react';\nimport { Icon, List, Message } from 'semantic-ui-react';\nimport './index.css';\n\nconst ConverterResults = ({\n  convertResult,\n  amount\n}) => React.createElement(\"div\", {\n  className: \"converter-results\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"converter-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, convertResult.map(({\n  rate,\n  result,\n  from,\n  to\n}) => React.createElement(Message, {\n  key: rate,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(List, {\n  size: \"huge\",\n  verticalAlign: \"middle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(List.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(List.Content, {\n  floated: \"right\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(List.Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"1 \", from, \" \", React.createElement(Icon, {\n  name: \"long arrow alternate right\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), \" \", to, ' ', rate, ' ')), React.createElement(List.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(List.Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, amount, \" \", from, \" \", React.createElement(Icon, {\n  name: \"long arrow alternate right\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), ' ', to, \" \", result))))))));\n\nexport default ConverterResults;","map":{"version":3,"sources":["/home/hexen/Work/currency/src/components/ConverterResults/index.js"],"names":["React","Icon","List","Message","ConverterResults","convertResult","amount","map","rate","result","from","to"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,QAAoC,mBAApC;AACA,OAAO,aAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KACvB;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,aAAa,CAACE,GAAd,CAAkB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA;AAAtB,CAAD,KACjB,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAEH,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,MAAX;AAAkB,EAAA,aAAa,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,OAAN;AAAc,EAAA,OAAO,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,IADL,OACW,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADX,OACuDC,EADvD,EAC2D,GAD3D,EAEGH,IAFH,EAES,GAFT,CADF,CADF,EAOE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,MADH,OACYI,IADZ,OACkB,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADlB,EAC6D,GAD7D,EAEGC,EAFH,OAEQF,MAFR,CADF,CAPF,CADF,CADF,CADD,CADH,CADF,CADF;;AA2BA,eAAeL,gBAAf","sourcesContent":["import React from 'react'\nimport { Icon, List, Message } from 'semantic-ui-react'\nimport './index.css'\n\nconst ConverterResults = ({ convertResult, amount }) => (\n  <div className=\"converter-results\">\n    <div className=\"converter-wrapper\">\n      {convertResult.map(({ rate, result, from, to }) => (\n        <Message key={rate}>\n          <List size=\"huge\" verticalAlign=\"middle\">\n            <List.Item>\n              <List.Content floated=\"right\">\n                <List.Header>\n                  1 {from} <Icon name=\"long arrow alternate right\" /> {to}{' '}\n                  {rate}{' '}\n                </List.Header>\n              </List.Content>\n              <List.Content>\n                <List.Header>\n                  {amount} {from} <Icon name=\"long arrow alternate right\" />{' '}\n                  {to} {result}\n                </List.Header>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Message>\n      ))}\n    </div>\n  </div>\n)\n\nexport default ConverterResults\n"]},"metadata":{},"sourceType":"module"}