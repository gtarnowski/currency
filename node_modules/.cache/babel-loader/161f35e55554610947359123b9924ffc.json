{"ast":null,"code":"var _jsxFileName = \"/home/hexen/Work/currency/src/components/CompareControls/index.js\";\nimport React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\nimport { defaultFormat } from '../../lib/formatDate';\nimport { makeSelectCurrency, makeSelectEndDate, makeSelectStartDate } from '../../containers/Compare/selectors';\nimport { compareSetCurrency, compareSetEndDate, compareSetStartDate } from '../../containers/Compare/actions';\nimport CurrencyDropDown from '../../components/CurrencyDropDown';\nimport './index.css';\n\nconst CompareControls = ({\n  onChangeStartDate,\n  onChangeEndDate,\n  onChangeCurrency,\n  currency,\n  startDate,\n  endDate\n}) => {\n  const onDefaultSearch = () => {\n    onChangeStartDate('2015-03-26');\n    onChangeEndDate('2016-06-13');\n    onChangeCurrency('GBP');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"compare-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Compare \"), React.createElement(\"a\", {\n    href: \"#\",\n    onClick: onDefaultSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Default search\")), React.createElement(\"div\", {\n    className: \"compare-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(SemanticDatepicker, {\n    onDateChange: date => onChangeStartDate(defaultFormat(date)),\n    selected: startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(SemanticDatepicker, {\n    onDateChange: date => onChangeEndDate(defaultFormat(date)),\n    selected: endDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(CurrencyDropDown, {\n    onChange: onChangeCurrency,\n    placeholder: \"Select currency\",\n    value: currency,\n    selection: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currency: makeSelectCurrency(),\n  startDate: makeSelectStartDate(),\n  endDate: makeSelectEndDate()\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeStartDate: payload => dispatch(compareSetStartDate(payload)),\n  onChangeEndDate: payload => dispatch(compareSetEndDate(payload)),\n  onChangeCurrency: payload => dispatch(compareSetCurrency(payload))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(CompareControls);","map":{"version":3,"sources":["/home/hexen/Work/currency/src/components/CompareControls/index.js"],"names":["React","Header","connect","compose","createStructuredSelector","SemanticDatepicker","defaultFormat","makeSelectCurrency","makeSelectEndDate","makeSelectStartDate","compareSetCurrency","compareSetEndDate","compareSetStartDate","CurrencyDropDown","CompareControls","onChangeStartDate","onChangeEndDate","onChangeCurrency","currency","startDate","endDate","onDefaultSearch","date","mapStateToProps","mapDispatchToProps","dispatch","payload","withConnect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Header } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { createStructuredSelector } from 'reselect'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers'\nimport { defaultFormat } from '../../lib/formatDate'\nimport {\n  makeSelectCurrency,\n  makeSelectEndDate,\n  makeSelectStartDate\n} from '../../containers/Compare/selectors'\nimport {\n  compareSetCurrency,\n  compareSetEndDate,\n  compareSetStartDate\n} from '../../containers/Compare/actions'\nimport CurrencyDropDown from '../../components/CurrencyDropDown'\nimport './index.css'\n\nconst CompareControls = ({\n  onChangeStartDate,\n  onChangeEndDate,\n  onChangeCurrency,\n  currency,\n  startDate,\n  endDate\n}) => {\n  const onDefaultSearch = () => {\n    onChangeStartDate('2015-03-26')\n    onChangeEndDate('2016-06-13')\n    onChangeCurrency('GBP')\n  }\n  return (\n    <div className=\"compare-controls\">\n      <Header as=\"h1\">Compare </Header>\n      <a href=\"#\" onClick={onDefaultSearch}>\n        <small>Default search</small>\n      </a>\n      <div className=\"compare-wrapper\">\n        <SemanticDatepicker\n          onDateChange={date => onChangeStartDate(defaultFormat(date))}\n          selected={startDate}\n        />\n        <SemanticDatepicker\n          onDateChange={date => onChangeEndDate(defaultFormat(date))}\n          selected={endDate}\n        />\n        <CurrencyDropDown\n          onChange={onChangeCurrency}\n          placeholder=\"Select currency\"\n          value={currency}\n          selection\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currency: makeSelectCurrency(),\n  startDate: makeSelectStartDate(),\n  endDate: makeSelectEndDate()\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeStartDate: payload => dispatch(compareSetStartDate(payload)),\n  onChangeEndDate: payload => dispatch(compareSetEndDate(payload)),\n  onChangeCurrency: payload => dispatch(compareSetCurrency(payload))\n})\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default compose(withConnect)(CompareControls)\n"]},"metadata":{},"sourceType":"module"}