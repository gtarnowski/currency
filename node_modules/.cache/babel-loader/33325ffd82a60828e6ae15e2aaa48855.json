{"ast":null,"code":"import _objectSpread from \"/home/hexen/Work/currency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { call, takeLatest, put, select } from 'redux-saga/effects';\nimport { compareSetCompareResults, compareGetCompare } from './actions';\nimport { makeSelectCurrency, makeSelectEndDate, makeSelectStartDate } from './selectors';\nimport { COMPARE_ENDPOINT_PATH } from '../../constants/endpoints';\nimport apiRequest from '../../lib/apiRequest';\nimport Compare from '../../api/compareModel';\nexport function* compareSaga() {\n  const selectStartDate = yield call(makeSelectStartDate);\n  const startDate = yield select(selectStartDate);\n  const selectEndDate = yield call(makeSelectEndDate);\n  const endDate = yield select(selectEndDate);\n  const selectCurrency = yield call(makeSelectCurrency);\n  const currency = yield select(selectCurrency);\n\n  try {\n    const requestUrl = \"\".concat(COMPARE_ENDPOINT_PATH).concat(startDate, \"..\").concat(endDate, \"?to=\").concat(currency);\n\n    const _ref = yield call(apiRequest, requestUrl),\n          data = _ref.data;\n\n    const model = Compare.CreateCompareModel(_objectSpread({}, data, {\n      currency\n    }));\n    yield put(compareSetCompareResults(model));\n  } catch (e) {}\n}\nexport default function* defaultSaga() {\n  yield takeLatest(compareGetCompare, compareSaga);\n}","map":{"version":3,"sources":["/home/hexen/Work/currency/src/containers/Compare/saga.js"],"names":["call","takeLatest","put","select","compareSetCompareResults","compareGetCompare","makeSelectCurrency","makeSelectEndDate","makeSelectStartDate","COMPARE_ENDPOINT_PATH","apiRequest","Compare","compareSaga","selectStartDate","startDate","selectEndDate","endDate","selectCurrency","currency","requestUrl","data","model","CreateCompareModel","e","defaultSaga"],"mappings":";AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,EAAgCC,MAAhC,QAA8C,oBAA9C;AACA,SACEC,wBADF,EAEEC,iBAFF,QAGO,WAHP;AAIA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,mBAHF,QAIO,aAJP;AAKA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMC,eAAe,GAAG,MAAMb,IAAI,CAACQ,mBAAD,CAAlC;AACA,QAAMM,SAAS,GAAG,MAAMX,MAAM,CAACU,eAAD,CAA9B;AACA,QAAME,aAAa,GAAG,MAAMf,IAAI,CAACO,iBAAD,CAAhC;AACA,QAAMS,OAAO,GAAG,MAAMb,MAAM,CAACY,aAAD,CAA5B;AACA,QAAME,cAAc,GAAG,MAAMjB,IAAI,CAACM,kBAAD,CAAjC;AACA,QAAMY,QAAQ,GAAG,MAAMf,MAAM,CAACc,cAAD,CAA7B;;AAEA,MAAI;AAEF,UAAME,UAAU,aAAMV,qBAAN,SAA8BK,SAA9B,eAA4CE,OAA5C,iBAA0DE,QAA1D,CAAhB;;AAFE,iBAGe,MAAMlB,IAAI,CAACU,UAAD,EAAaS,UAAb,CAHzB;AAAA,UAGMC,IAHN,QAGMA,IAHN;;AAIF,UAAMC,KAAK,GAAGV,OAAO,CAACW,kBAAR,mBAAgCF,IAAhC;AAAsCF,MAAAA;AAAtC,OAAd;AACA,UAAMhB,GAAG,CAACE,wBAAwB,CAACiB,KAAD,CAAzB,CAAT;AACD,GAND,CAME,OAAOE,CAAP,EAAU,CAEX;AAEF;AAED,eAAe,UAAUC,WAAV,GAAwB;AACrC,QAAMvB,UAAU,CAACI,iBAAD,EAAoBO,WAApB,CAAhB;AACD","sourcesContent":["import { call, takeLatest, put, select } from 'redux-saga/effects'\nimport {\n  compareSetCompareResults,\n  compareGetCompare\n} from './actions'\nimport {\n  makeSelectCurrency,\n  makeSelectEndDate,\n  makeSelectStartDate\n} from './selectors'\nimport { COMPARE_ENDPOINT_PATH } from '../../constants/endpoints'\nimport apiRequest from '../../lib/apiRequest'\nimport Compare from '../../api/compareModel'\n\nexport function* compareSaga() {\n  const selectStartDate = yield call(makeSelectStartDate)\n  const startDate = yield select(selectStartDate)\n  const selectEndDate = yield call(makeSelectEndDate)\n  const endDate = yield select(selectEndDate)\n  const selectCurrency = yield call(makeSelectCurrency)\n  const currency = yield select(selectCurrency)\n\n  try {\n\n    const requestUrl = `${COMPARE_ENDPOINT_PATH}${startDate}..${endDate}?to=${currency}`\n    const { data } = yield call(apiRequest, requestUrl )\n    const model = Compare.CreateCompareModel({ ...data, currency })\n    yield put(compareSetCompareResults(model))\n  } catch (e) {\n\n  }\n\n}\n\nexport default function* defaultSaga() {\n  yield takeLatest(compareGetCompare, compareSaga)\n}\n"]},"metadata":{},"sourceType":"module"}