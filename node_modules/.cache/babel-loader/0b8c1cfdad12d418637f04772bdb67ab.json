{"ast":null,"code":"var _jsxFileName = \"/home/hexen/Work/currency/src/containers/Converter/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport isEqual from 'lodash/isEqual';\nimport { converterConvert } from './actions';\nimport { makeSelectAmount, makeSelectConvertResult, makeSelectFromCurrency, makeSelectToCurrency } from './selectors';\nimport ConverterControls from '../../components/ConverterControls';\nimport ConverterResults from '../../components/ConverterResults';\nimport EmptyContent from '../../components/EmptyContent';\n\nclass Converter extends Component {\n  componentDidUpdate({\n    from: prevFrom,\n    to: prevTo,\n    amount: prevAmount\n  }, prevState, snapshot) {\n    const _this$props = this.props,\n          onSubmit = _this$props.onSubmit,\n          from = _this$props.from,\n          to = _this$props.to,\n          amount = _this$props.amount;\n\n    if (from && amount && to && to.length > 0) {\n      if (from !== prevFrom || amount !== prevAmount || !isEqual(to, prevTo)) {\n        onSubmit();\n      }\n    }\n  }\n\n  render() {\n    const convertResult = this.props.convertResult;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ConverterControls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), convertResult.length > 0 ? React.createElement(ConverterResults, {\n      convertResult: convertResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : React.createElement(EmptyContent, {\n      title: \"No results found\",\n      subtitle: \"Try to change amount or date range\",\n      icon: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  amount: makeSelectAmount(),\n  to: makeSelectToCurrency(),\n  from: makeSelectFromCurrency(),\n  convertResult: makeSelectConvertResult()\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: () => dispatch(converterConvert())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(Converter);","map":{"version":3,"sources":["/home/hexen/Work/currency/src/containers/Converter/index.js"],"names":["React","Component","connect","createStructuredSelector","compose","isEqual","converterConvert","makeSelectAmount","makeSelectConvertResult","makeSelectFromCurrency","makeSelectToCurrency","ConverterControls","ConverterResults","EmptyContent","Converter","componentDidUpdate","from","prevFrom","to","prevTo","amount","prevAmount","prevState","snapshot","props","onSubmit","length","render","convertResult","mapStateToProps","mapDispatchToProps","dispatch","withConnect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SACEC,gBADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,oBAJF,QAKO,aALP;AAOA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAChCc,EAAAA,kBAAkB,CAChB;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,EAAE,EAAEC,MAAtB;AAA8BC,IAAAA,MAAM,EAAEC;AAAtC,GADgB,EAEhBC,SAFgB,EAGhBC,QAHgB,EAIhB;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBT,IADlB,eACkBA,IADlB;AAAA,UACwBE,EADxB,eACwBA,EADxB;AAAA,UAC4BE,MAD5B,eAC4BA,MAD5B;;AAEA,QAAIJ,IAAI,IAAII,MAAR,IAAmBF,EAAE,IAAIA,EAAE,CAACQ,MAAH,GAAY,CAAzC,EAA6C;AAC3C,UAAIV,IAAI,KAAKC,QAAT,IAAqBG,MAAM,KAAKC,UAAhC,IAA8C,CAAChB,OAAO,CAACa,EAAD,EAAKC,MAAL,CAA1D,EAAwE;AACtEM,QAAAA,QAAQ;AACT;AACF;AACF;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCC,aADD,GACmB,KAAKJ,KADxB,CACCI,aADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGGA,aAAa,CAACF,MAAd,GAAuB,CAAvB,GACC,oBAAC,gBAAD;AACE,MAAA,aAAa,EAAEE,aADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAKC,oBAAC,YAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,QAAQ,EAAC,oCAFX;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADF;AAiBD;;AAjC+B;;AAoClC,MAAMC,eAAe,GAAG1B,wBAAwB,CAAC;AAC/CiB,EAAAA,MAAM,EAAEb,gBAAgB,EADuB;AAE/CW,EAAAA,EAAE,EAAER,oBAAoB,EAFuB;AAG/CM,EAAAA,IAAI,EAAEP,sBAAsB,EAHmB;AAI/CmB,EAAAA,aAAa,EAAEpB,uBAAuB;AAJS,CAAD,CAAhD;;AAOA,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCN,EAAAA,QAAQ,EAAE,MAAMM,QAAQ,CAACzB,gBAAgB,EAAjB;AADc,CAAL,CAAnC;;AAIA,MAAM0B,WAAW,GAAG9B,OAAO,CACzB2B,eADyB,EAEzBC,kBAFyB,CAA3B;AAKA,eAAe1B,OAAO,CAAC4B,WAAD,CAAP,CAAqBlB,SAArB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { compose } from 'redux'\nimport isEqual from 'lodash/isEqual'\nimport { converterConvert } from './actions'\nimport {\n  makeSelectAmount,\n  makeSelectConvertResult,\n  makeSelectFromCurrency,\n  makeSelectToCurrency\n} from './selectors'\n\nimport ConverterControls from '../../components/ConverterControls'\nimport ConverterResults from '../../components/ConverterResults'\nimport EmptyContent from '../../components/EmptyContent'\n\nclass Converter extends Component {\n  componentDidUpdate(\n    { from: prevFrom, to: prevTo, amount: prevAmount },\n    prevState,\n    snapshot\n  ) {\n    const { onSubmit, from, to, amount } = this.props\n    if (from && amount && (to && to.length > 0)) {\n      if (from !== prevFrom || amount !== prevAmount || !isEqual(to, prevTo)) {\n        onSubmit()\n      }\n    }\n  }\n\n  render() {\n    const { convertResult } = this.props\n    return (\n      <div>\n        <ConverterControls />\n\n        {convertResult.length > 0 ? (\n          <ConverterResults\n            convertResult={convertResult}\n          />\n        ) : (\n          <EmptyContent\n            title=\"No results found\"\n            subtitle=\"Try to change amount or date range\"\n            icon=\"search\"\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  amount: makeSelectAmount(),\n  to: makeSelectToCurrency(),\n  from: makeSelectFromCurrency(),\n  convertResult: makeSelectConvertResult()\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: () => dispatch(converterConvert())\n})\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default compose(withConnect)(Converter)\n"]},"metadata":{},"sourceType":"module"}