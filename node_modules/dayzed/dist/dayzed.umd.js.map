{"version":3,"file":"dayzed.umd.js","sources":["../src/utils.js","../src/dayzed.js","../src/index.js"],"sourcesContent":["import addDays from 'date-fns/add_days';\nimport isBefore from 'date-fns/is_before';\nimport isToday from 'date-fns/is_today';\nimport startOfDay from 'date-fns/start_of_day';\nimport differenceInCalendarMonths from 'date-fns/difference_in_calendar_months';\n\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls\n * `event.preventDefault()`. Not sure this is the best\n * way to do this, but it seems legit...\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\nexport function composeEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      fn && fn(event, ...args);\n      return event.defaultPrevented;\n    });\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nexport function requiredProp(fnName, propName) {\n  throw new Error(`The property \"${propName}\" is required in \"${fnName}\"`);\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument.\n * @param {*} arg the maybe-array\n * @return {*} the arg or it's first item\n */\nexport function unwrapChildrenForPreact(arg) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg;\n  return arg || noop;\n}\nfunction noop() {}\n\n/**\n * Takes a calendars array and figures out the number of months to subtract\n * based on the current offset and the minDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Number} param.offset The num of months to be subtracted\n * @param {Date} param.minDate The earliest date we are allow to subtract back to\n * @returns {Number} The number of months to subtract\n */\nexport function subtractMonth({ calendars, offset, minDate }) {\n  if (offset > 1 && minDate) {\n    const { firstDayOfMonth } = calendars[0];\n    const diffInMonths = differenceInCalendarMonths(firstDayOfMonth, minDate);\n    if (diffInMonths < offset) {\n      offset = diffInMonths;\n    }\n  }\n  return offset;\n}\n\n/**\n * Takes a calendars array and figures out the number of months to add\n * based on the current offset and the maxDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Number} param.offset The num of months to be added\n * @param {Date} param.maxDate The furthest date we are allow to add forward to\n * @returns {Number} The number of months to add\n */\nexport function addMonth({ calendars, offset, maxDate }) {\n  if (offset > 1 && maxDate) {\n    const { lastDayOfMonth } = calendars[calendars.length - 1];\n    const diffInMonths = differenceInCalendarMonths(maxDate, lastDayOfMonth);\n    if (diffInMonths < offset) {\n      offset = diffInMonths;\n    }\n  }\n  return offset;\n}\n\n/**\n * Takes a calendars array and figures out if the back button should be\n * disabled based on the minDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Date} param.minDate The earliest date available\n * @returns {Boolean} Whether the back button should be disabled.\n */\nexport function isBackDisabled({ calendars, minDate }) {\n  if (!minDate) {\n    return false;\n  }\n  const { firstDayOfMonth } = calendars[0];\n  const firstDayOfMonthMinusOne = addDays(firstDayOfMonth, -1);\n  if (isBefore(firstDayOfMonthMinusOne, minDate)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Takes a calendars array and figures out if the forward button should be\n * disabled based on the maxDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Date} param.maxDate The furthest date available\n * @returns {Boolean} Whether the forward button should be disabled.\n */\nexport function isForwardDisabled({ calendars, maxDate }) {\n  if (!maxDate) {\n    return false;\n  }\n  const { lastDayOfMonth } = calendars[calendars.length - 1];\n  const lastDayOfMonthPlusOne = addDays(lastDayOfMonth, 1);\n  if (isBefore(maxDate, lastDayOfMonthPlusOne)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Figures out the months data needed based off the number of monthsToDisplay\n * and other options provided.\n * @param {Object} param The param object\n * @param {Date} param.date The date to start the calendar at\n * @param {Array.<Date>} param.selected An array of dates currently selected\n * @param {Number} param.monthsToDisplay The number of months to return in the calendar view\n * @param {Number} param.offset The number of months to offset based off the param.date given\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Array.<Object>} An array of objects with month data\n */\nexport function getCalendars({\n  date,\n  selected,\n  monthsToDisplay,\n  offset,\n  minDate,\n  maxDate,\n  firstDayOfWeek,\n  showOutsideDays\n}) {\n  const months = [];\n  const startDate = getStartDate(date, minDate, maxDate);\n  for (let i = 0; i < monthsToDisplay; i++) {\n    const calendarDates = getMonths({\n      month: startDate.getMonth() + i + offset,\n      year: startDate.getFullYear(),\n      selectedDates: selected,\n      minDate,\n      maxDate,\n      firstDayOfWeek,\n      showOutsideDays\n    });\n    months.push(calendarDates);\n  }\n  return months;\n}\n\n/**\n * Figures out the actual start date based on\n * the min and max dates available.\n * @param {Date} date The we want to start the calendar at\n * @param {Date} minDate The earliest date available to start at\n * @param {Date} maxDate The latest date available to start at\n * @returns {Date} The actual start date\n */\nfunction getStartDate(date, minDate, maxDate) {\n  let startDate = startOfDay(date);\n  if (minDate) {\n    const minDateNormalized = startOfDay(minDate);\n    if (isBefore(startDate, minDateNormalized)) {\n      startDate = minDateNormalized;\n    }\n  }\n  if (maxDate) {\n    const maxDateNormalized = startOfDay(maxDate);\n    if (isBefore(maxDateNormalized, startDate)) {\n      startDate = maxDateNormalized;\n    }\n  }\n  return startDate;\n}\n\n/**\n * Figures what week/day data to return for the given month\n * and year. Adds flags to day data if found in the given selectedDates,\n * if is selectable inside the given min and max dates, or is today.\n * @param {Object} param The param object\n * @param {Number} param.month The month to grab data for\n * @param {Number} param.year The year to grab data for\n * @param {Array.<Date>} sparam.electedDates An array of dates currently selected\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Object} The data for the selected month/year\n */\nfunction getMonths({\n  month,\n  year,\n  selectedDates,\n  minDate,\n  maxDate,\n  firstDayOfWeek,\n  showOutsideDays\n}) {\n  // Get the normalized month and year, along with days in the month.\n  const daysMonthYear = getNumDaysMonthYear(month, year);\n  const daysInMonth = daysMonthYear.daysInMonth;\n  month = daysMonthYear.month;\n  year = daysMonthYear.year;\n\n  // Fill out the dates for the month.\n  const dates = [];\n  for (let day = 1; day <= daysInMonth; day++) {\n    const date = new Date(year, month, day);\n    const dateObj = {\n      date,\n      selected: isSelected(selectedDates, date),\n      selectable: isSelectable(minDate, maxDate, date),\n      today: isToday(date),\n      prevMonth: false,\n      nextMonth: false\n    };\n    dates.push(dateObj);\n  }\n\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonth = new Date(year, month, daysInMonth);\n\n  const frontWeekBuffer = fillFrontWeek({\n    firstDayOfMonth,\n    minDate,\n    maxDate,\n    selectedDates,\n    firstDayOfWeek,\n    showOutsideDays\n  });\n\n  const backWeekBuffer = fillBackWeek({\n    lastDayOfMonth,\n    minDate,\n    maxDate,\n    selectedDates,\n    firstDayOfWeek,\n    showOutsideDays\n  });\n\n  dates.unshift(...frontWeekBuffer);\n  dates.push(...backWeekBuffer);\n\n  // Get the filled out weeks for the\n  // given dates.\n  const weeks = getWeeks(dates);\n  // return the calendar data.\n  return {\n    firstDayOfMonth,\n    lastDayOfMonth,\n    month,\n    year,\n    weeks\n  };\n}\n\n/**\n * Fill front week with either empty buffer or dates from previous month,\n * depending on showOutsideDays flag\n * @param {Object} param The param object\n * @param {Array.<Date>} param.selectedDates An array of dates currently selected\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Date} param.firstDayOfMonth First day of the month\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Array.<Date>} Buffer to fill front week\n */\nfunction fillFrontWeek({\n  firstDayOfMonth,\n  minDate,\n  maxDate,\n  selectedDates,\n  firstDayOfWeek,\n  showOutsideDays\n}) {\n  const dates = [];\n  let firstDay = (firstDayOfMonth.getDay() + 7 - firstDayOfWeek) % 7;\n\n  if (showOutsideDays) {\n    const lastDayOfPrevMonth = addDays(firstDayOfMonth, -1);\n    const prevDate = lastDayOfPrevMonth.getDate();\n    const prevDateMonth = lastDayOfPrevMonth.getMonth();\n    const prevDateYear = lastDayOfPrevMonth.getFullYear();\n\n    // Fill out front week for days from\n    // preceding month with dates from previous month.\n    let counter = 0;\n    while (counter < firstDay) {\n      const date = new Date(prevDateYear, prevDateMonth, prevDate - counter);\n      const dateObj = {\n        date,\n        selected: isSelected(selectedDates, date),\n        selectable: isSelectable(minDate, maxDate, date),\n        today: false,\n        prevMonth: true,\n        nextMonth: false\n      };\n      dates.unshift(dateObj);\n      counter++;\n    }\n  } else {\n    // Fill out front week for days from\n    // preceding month with buffer.\n    while (firstDay > 0) {\n      dates.unshift('');\n      firstDay--;\n    }\n  }\n\n  return dates;\n}\n\n/**\n * Fill back weeks with either empty buffer or dates from next month,\n * depending on showOutsideDays flag\n * @param {Object} param The param object\n * @param {Array.<Date>} param.selectedDates An array of dates currently selected\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Date} param.lastDayOfMonth Last day of the month\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Array.<Date>} Buffer to fill back week\n */\nfunction fillBackWeek({\n  lastDayOfMonth,\n  minDate,\n  maxDate,\n  selectedDates,\n  firstDayOfWeek,\n  showOutsideDays\n}) {\n  const dates = [];\n  let lastDay = (lastDayOfMonth.getDay() + 7 - firstDayOfWeek) % 7;\n\n  if (showOutsideDays) {\n    const firstDayOfNextMonth = addDays(lastDayOfMonth, 1);\n    const nextDateMonth = firstDayOfNextMonth.getMonth();\n    const nextDateYear = firstDayOfNextMonth.getFullYear();\n\n    // Fill out back week for days from\n    // following month with dates from next month.\n    let counter = 0;\n    while (counter < 6 - lastDay) {\n      const date = new Date(nextDateYear, nextDateMonth, 1 + counter);\n      const dateObj = {\n        date,\n        selected: isSelected(selectedDates, date),\n        selectable: isSelectable(minDate, maxDate, date),\n        today: false,\n        prevMonth: false,\n        nextMonth: true\n      };\n      dates.push(dateObj);\n      counter++;\n    }\n  } else {\n    // Fill out back week for days from\n    // following month with buffer.\n    while (lastDay < 6) {\n      dates.push('');\n      lastDay++;\n    }\n  }\n\n  return dates;\n}\n\n/**\n * Normalizes month (could be overflow) and year pairs and returns the\n * normalized month and year along with the number of days in the month.\n * @param {Number} month The month to normalize\n * @param {Number} year The year to normalize\n * @returns {Object} The normalized month and year along with the number of days in the month\n */\nfunction getNumDaysMonthYear(month, year) {\n  // If a parameter you specify is outside of the expected range for Month or Day,\n  // JS Date attempts to update the date information in the Date object accordingly!\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\n\n  // Let Date handle the overflow of the month,\n  // which should return the normalized month and year.\n  const normalizedMonthYear = new Date(year, month, 1);\n  month = normalizedMonthYear.getMonth();\n  year = normalizedMonthYear.getFullYear();\n  // Overflow the date to the next month, then subtract the difference\n  // to get the number of days in the previous month.\n  // This will also account for leap years!\n  const daysInMonth = 32 - new Date(year, month, 32).getDate();\n  return { daysInMonth, month, year };\n}\n\n/**\n * Takes an array of dates, and turns them into a multi dimensional\n * array with 7 entries for each week.\n * @param {Array.<Object>} dates An array of dates\n * @returns {Array} The weeks as a multi dimensional array\n */\nfunction getWeeks(dates) {\n  const weeksLength = Math.ceil(dates.length / 7);\n  const weeks = [];\n  for (let i = 0; i < weeksLength; i++) {\n    weeks[i] = [];\n    for (let x = 0; x < 7; x++) {\n      weeks[i].push(dates[i * 7 + x]);\n    }\n  }\n  return weeks;\n}\n\n/**\n * Normalizes dates to the beginning of the day,\n * then checks to see if the day given is found\n * in the selectedDates.\n * @param {Array.<Date>} selectedDates An array of dates currently selected\n * @param {Date} date The date to search with against selectedDates\n * @returns {Boolean} Whether day is found in selectedDates\n */\nfunction isSelected(selectedDates, date) {\n  selectedDates = Array.isArray(selectedDates)\n    ? selectedDates\n    : [selectedDates];\n  return selectedDates.some(selectedDate => {\n    if (\n      selectedDate instanceof Date &&\n      startOfDay(selectedDate).getTime() === startOfDay(date).getTime()\n    ) {\n      return true;\n    }\n    return false;\n  });\n}\n\n/**\n * Checks to see if the date given is\n * between the min and max dates.\n * @param {Date} minDate The earliest date available\n * @param {Date} maxDate The furthest date available\n * @param {Date} date The date to compare with\n * @returns {Boolean} Whether the date is between min and max date\n */\nfunction isSelectable(minDate, maxDate, date) {\n  if (\n    (minDate && isBefore(date, minDate)) ||\n    (maxDate && isBefore(maxDate, date))\n  ) {\n    return false;\n  }\n  return true;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  composeEventHandlers,\n  requiredProp,\n  unwrapChildrenForPreact,\n  subtractMonth,\n  addMonth,\n  isBackDisabled,\n  isForwardDisabled,\n  getCalendars\n} from './utils';\n\nclass Dayzed extends React.Component {\n  state = { offset: 0 };\n\n  /* TODO: Remove this block in next major release */\n  constructor(props) {\n    super(props);\n    /* eslint-disable */\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof props.fillAdjacentMonths !== 'undefined'\n    ) {\n      console.warn(\n        `Warning: Dayzed's fillAdjacementMonths is deprecated and may be removed in future releases. Please use showOutsideDays instead. It works identically. For more info see https://github.com/deseretdigital/dayzed#showoutsidedays`\n      );\n    }\n    /* eslint-enable */\n  }\n\n  /*------------------------- React Component Lifecycle Methods ---*/\n\n  render() {\n    const {\n      date,\n      selected,\n      monthsToDisplay,\n      minDate,\n      maxDate,\n      firstDayOfWeek,\n      fillAdjacentMonths,\n      showOutsideDays\n    } = this.props;\n    const calendars = getCalendars({\n      date,\n      selected,\n      monthsToDisplay,\n      minDate,\n      maxDate,\n      offset: this.getOffset(),\n      firstDayOfWeek,\n      /* TODO: Remove fillAdjacementMonths in next major release */\n      showOutsideDays: showOutsideDays || fillAdjacentMonths\n    });\n    const children = unwrapChildrenForPreact(\n      this.props.render || this.props.children\n    );\n    return children({\n      calendars,\n      getDateProps: this.getDateProps,\n      getBackProps: this.getBackProps,\n      getForwardProps: this.getForwardProps\n    });\n  }\n\n  /*------------------------- Prop Getters ---*/\n\n  getBackProps = ({\n    onClick,\n    offset = 1,\n    calendars = requiredProp('getBackProps', 'calendars'),\n    ...rest\n  } = {}) => {\n    const { minDate } = this.props;\n    const offsetMonth = this.getOffset();\n    return {\n      onClick: composeEventHandlers(onClick, () => {\n        this.onOffsetChanged(\n          offsetMonth - subtractMonth({ calendars, offset, minDate })\n        );\n      }),\n      disabled: isBackDisabled({ calendars, offset, minDate }),\n      'aria-label': `Go back ${offset} month${offset === 1 ? '' : 's'}`,\n      ...rest\n    };\n  };\n\n  getForwardProps = ({\n    onClick,\n    offset = 1,\n    calendars = requiredProp('getForwardProps', 'calendars'),\n    ...rest\n  } = {}) => {\n    const { maxDate } = this.props;\n    const offsetMonth = this.getOffset();\n    return {\n      onClick: composeEventHandlers(onClick, () => {\n        this.onOffsetChanged(\n          offsetMonth + addMonth({ calendars, offset, maxDate })\n        );\n      }),\n      disabled: isForwardDisabled({ calendars, offset, maxDate }),\n      'aria-label': `Go forward ${offset} month${offset === 1 ? '' : 's'}`,\n      ...rest\n    };\n  };\n\n  getDateProps = ({\n    onClick,\n    dateObj = requiredProp('getDateProps', 'dateObj'),\n    ...rest\n  } = {}) => {\n    return {\n      onClick: composeEventHandlers(onClick, () => {\n        this.props.onDateSelected(dateObj);\n      }),\n      disabled: !dateObj.selectable,\n      'aria-label': dateObj.date.toDateString(),\n      'aria-pressed': dateObj.selected,\n      role: 'button',\n      ...rest\n    };\n  };\n\n  /*------------------------- Control Props ---*/\n\n  getOffset = () => {\n    return this.isOffsetControlled() ? this.props.offset : this.state.offset;\n  };\n\n  isOffsetControlled = () => {\n    return this.props.offset !== undefined;\n  };\n\n  onOffsetChanged = newOffset => {\n    if (this.isOffsetControlled()) {\n      this.props.onOffsetChanged(newOffset);\n    } else {\n      this.setState({ offset: newOffset }, () => {\n        this.props.onOffsetChanged(newOffset);\n      });\n    }\n  };\n}\n\nDayzed.defaultProps = {\n  date: new Date(),\n  monthsToDisplay: 1,\n  onOffsetChanged: () => {},\n  firstDayOfWeek: 0,\n  showOutsideDays: false\n};\n\nDayzed.propTypes = {\n  render: PropTypes.func,\n  children: PropTypes.func,\n  date: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  monthsToDisplay: PropTypes.number,\n  firstDayOfWeek: PropTypes.number,\n  showOutsideDays: PropTypes.bool,\n  /* TODO: Remove fillAdjacementMonths in next major release */\n  fillAdjacentMonths: PropTypes.bool,\n  offset: PropTypes.number,\n  onDateSelected: PropTypes.func.isRequired,\n  onOffsetChanged: PropTypes.func,\n  selected: PropTypes.oneOfType([\n    PropTypes.arrayOf(Date),\n    PropTypes.instanceOf(Date)\n  ])\n};\n\nexport default Dayzed;\n","import Dayzed from './dayzed';\n\n/*\n * Fix importing in typescript after rollup compilation\n * https://github.com/rollup/rollup/issues/1156\n * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860\n */\nDayzed.default = Dayzed;\n\nexport default Dayzed;\n"],"names":["composeEventHandlers","fns","event","args","some","fn","defaultPrevented","requiredProp","fnName","propName","Error","unwrapChildrenForPreact","arg","Array","isArray","noop","subtractMonth","calendars","offset","minDate","firstDayOfMonth","diffInMonths","differenceInCalendarMonths","addMonth","maxDate","lastDayOfMonth","length","isBackDisabled","firstDayOfMonthMinusOne","addDays","isBefore","isForwardDisabled","lastDayOfMonthPlusOne","getCalendars","date","selected","monthsToDisplay","firstDayOfWeek","showOutsideDays","months","startDate","getStartDate","i","calendarDates","getMonths","month","getMonth","year","getFullYear","selectedDates","push","startOfDay","minDateNormalized","maxDateNormalized","daysMonthYear","getNumDaysMonthYear","daysInMonth","dates","day","Date","dateObj","isSelected","selectable","isSelectable","today","isToday","prevMonth","nextMonth","frontWeekBuffer","fillFrontWeek","backWeekBuffer","fillBackWeek","unshift","weeks","getWeeks","firstDay","getDay","lastDayOfPrevMonth","prevDate","getDate","prevDateMonth","prevDateYear","counter","lastDay","firstDayOfNextMonth","nextDateMonth","nextDateYear","normalizedMonthYear","weeksLength","Math","ceil","x","selectedDate","getTime","Dayzed","props","state","getBackProps","onClick","rest","offsetMonth","getOffset","onOffsetChanged","disabled","getForwardProps","getDateProps","onDateSelected","toDateString","role","isOffsetControlled","undefined","newOffset","setState","fillAdjacentMonths","console","warn","render","children","React","Component","defaultProps","propTypes","PropTypes","func","instanceOf","number","bool","isRequired","oneOfType","arrayOf","default"],"mappings":"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"}